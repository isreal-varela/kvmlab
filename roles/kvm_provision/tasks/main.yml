---
# tasks file for kvm_provision
- name: Ensure requirements in place
  package:
    name:
      - libguestfs-tools 
      - guestfs-tools
      - python3-libvirt
      - virt-install
        #- libvirt-devel
      - virt-top
      - virt-manager
    state: present
  become: yes

- name: Get VMs list
  community.libvirt.virt:
    command: list_vms
  register: existing_vms
  changed_when: no

- name: Create VM if not exists
  block:

  - name: Copy base image to libvirt directory
    copy:
      dest: "{{ libvirt_pool_dir }}/{{ vm_name }}.qcow2"
      src: "{{ libvirt_pool_dir }}/{{ base_image_name }}"
      force: no
      remote_src: yes 
      mode: 0666
    register: copy_results

  - name: Configure the image
    command: |
      virt-customize -a {{ libvirt_pool_dir }}/{{ vm_name }}.qcow2 \
      --hostname {{ vm_name }} \
      --root-password password:{{ vm_root_pass }} \
      --ssh-inject 'ansible:file:{{ ssh_key }}' \
      --run-command 'sed -i '/BLOCK_RPCS/s/^/#/g' /etc/sysconfig/qemu-ga' \
      --selinux-relabel
    when: copy_results is changed

  - name: Define vm
    community.libvirt.virt:
      command: define
      xml: "{{ lookup('template', 'vm-template.xml.j2') }}"

  when: "vm_name not in existing_vms.list_vms"

- name: Ensure VM is started
  community.libvirt.virt:
    name: "{{ vm_name }}"
    state: running
  register: vm_start_results
  until: "vm_start_results is success"
  retries: 15
  delay: 2

