---
- name: Include OS-specific variables.
  include_vars: "{{ ansible_distribution }}.yml"

# =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
# START: Pre-requisites block

- name: Process pre-requisites
  block:

    - name: Pre-requisite package list
      debug:
        var: kvm_prereq_pkgs

    - name: Ensure requirements in place
      package:
        name:
          "{{ kvm_prereq_pkgs }}"
        # Look in roles/kvm_provision/vars/R*.yml files for list of packages
        state: present
      become: true

  when: not( skip_prereqs | default(false) )

# END: Pre-requisites block
# =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-

- name: Get VMs list
  become: true
  community.libvirt.virt:
    command: list_vms
  register: existing_vms
  changed_when: false

# =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
# START: Create VM block

- name: Create VM if not exists
  block:

    - name: Show initial VM config variables
      debug:
        msg:
          - "For 'vm_name' = '{{ vm_name }}', using the following initial parameters:"
          - "          vm_item_name: '{{ vm_item_name }}'"
          - "       base_image_name: '{{ base_image_name }}'"
          - "      libvirt_pool_dir: '{{ libvirt_pool_dir}}'"
          - "  ansible_user_ssh_key: '{{ ansible_user_ssh_key }}'"
          - "              vm_vcpus: {{ vm_vcpus }}"
          - "             vm_ram_mb: {{ vm_ram_mb }}"
          - "                vm_net: '{{ vm_net }}'"
          - "                vm_mac: '{{ vm_mac }}'"
          - "          vm_root_pass: '{{ vm_root_pass }}'"

    - debug:
        msg:
          - "Values not equal 'vm_item_name' vs 'vm_name'."
          - "                 '{{ vm_item_name }}' vs '{{ vm_name }}'."
          - "VM template should generate random mac address and not use above."
      when: vm_item_name != vm_name

    - name: Pause
      pause:
        seconds: 5

    - name: Copy base image to libvirt directory
      become: true
      copy:
        dest: "{{ libvirt_pool_dir }}/{{ vm_name }}.qcow2"
        src: "{{ libvirt_pool_dir }}/{{ base_image_name }}"
        force: false
        remote_src: true
        group: libvirt
        mode: 0600
      register: copy_results

    - name: Configure the image
      become: true
      command: |
        virt-customize -a {{ libvirt_pool_dir }}/{{ vm_name }}.qcow2 \
           --hostname {{ vm_name }}
      when: copy_results is changed

    - name: Define vm
      become: true
      community.libvirt.virt:
        command: define
        xml: "{{ lookup('template', 'vm-template.xml.j2') }}"

  when: ( vm_name not in existing_vms.list_vms )

# END: Create VM block
# =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-

- name: Ensure VM is started
  become: true
  community.libvirt.virt:
    name: "{{ vm_name }}"
    state: running
  register: vm_start_results
  until: "vm_start_results is success"
  retries: 15
  delay: 2
