---
- hosts: foreman_host        # was localhost
  gather_facts: false

  tasks:
    - name: "Include task list for Foreman Host/Master config"
      include_tasks: foreman_host_config.yml

    # ---------------------------------------------------------------------------
    #  When using the "generate-command", it would be used for any previously
    #    un-registered host
    - name: "Generate host-registration command"
      ansible.builtin.shell:
        hammer -c "{{ frmn_hmr_cfg_file }}" host-registration generate-command --activation-keys "{{ frmn_act_key }}"
      register: frmn_reg_cmd
    - name: "Save host-registration command"
      set_fact:
        reg_cmd: "{{ frmn_reg_cmd.stdout }}" 

# --------------------------------------------------------------------------------------------------

- hosts: kvms
  gather_facts: false

  # vars:
  #   frmn_gen_name: "{{ dns_name | replace('.', '_') | upper }}"
  #   frmn_org: "Default Organization"
  #   # frmn_org: "{{ dns_name | upper }} Organization"
  #   frmn_loc: "Default Location"
  #   # frmn_loc: "{{ dns_name | upper }} Location"
  #   frmn_lce: "{{ frmn_gen_name }}_LCE"
  #   frmn_hostgroup_name: "{{ frmn_gen_name }} Hostgroup"
  #  frmn_act_key: "{{ frmn_gen_name }} Activation Key"
  #   frmn_host: "foreman.{{ dns_name }}"
  #   frmn_url: "https://{{ frmn_host }}"
  #   frmn_usr: "admin"
  #   frmn_pwd: "{{ vault_foreman_admin_pwd }}"
  #   frmn_repo_list: []
  #   frmn_content_obj_list: []
  #   frmn_validate_cert: false

  tasks:
    - name: "Include shared Foreman environment-specific variables"
      ansible.builtin.include_vars: frmn.yml

    # - name: "Placeholder for KVM-specific tasks"
    #   debug:
    #     var: frmn_gen_name

    # ---------------------------------------------------------------------------
    ##### Appears that "registration_command" module is part of v4.1.0-dev of Foreman Ansible stuff
    #####   and not available to us with 3.11
    # - name: "Generate registration command"
    #   theforeman.foreman.registration_command:
    #     username: "{{ frmn_usr }}"
    #     password: "{{ frmn_pwd }}"
    #     server_url: "{{ frmn_url }}"
    #     validate_certs: "{{ frmn_validate_cert }}"
    #   register: command

    # - name: "Check 'command' value"
    #   debug:
    #     var: command

    - name: "Perform registration"
      become: true
      ansible.builtin.shell:
        cmd: "{{ hostvars[groups['foreman_host'][0]].reg_cmd }}"
      register: reg_out
      failed_when: 
        - ( reg_out.rc != 0 )
        - ( reg_out.rc != 1 )
        - '"This system is already reigstered" not in reg_out.stdout'
      # when: ( frmn_reg_cmd is defined )

    - name: "Disable list of internet-accessed repositories"
      become: true
      community.general.dnf_config_manager:
        name:
          - appstream
          - baseos
          - extras
        state: disabled

    ## ----------------------------------------------------------- ##
    ## 
    ## ----------------------------------------------------------- ##

- hosts: foreman_host
  gather_facts: false

  tasks:

    # ---------------------------------------------------------------------------
    #  Force update to hostgroup for all hosts that should now exist based
    #    on "registration" above
    - name: "Ensure hostgroup membership"
      ansible.builtin.shell:
        hammer -c "{{ frmn_hmr_cfg_file }}" host update --name "{{ item }}.{{ dns_name }}" --organization "{{ frmn_org }}" --location "{{ frmn_loc }}" --hostgroup "{{ frmn_hostgroup_name }}"
      register: hammer_out
      failed_when: 
        - ( hammer_out.rc != 0 )
        - ( hammer_out.rc != 65 )
      changed_when: '"Host updated" in hammer_out.stdout'
      with_items:
        - '{{ kvm_list | selectattr("enabled") | map(attribute="name") }}'

# --------------------------------------------------------------------------------------------------

