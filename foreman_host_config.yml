---

  - name: "Include shared Foreman environment-specific variables"
    ansible.builtin.include_vars: frmn.yml

  # ---------------------------------------------------------------------------
  #  Setup Hammer CLI-related configuration files

  - name: "Create local user foreman folders"
    ansible.builtin.file:
      path: "{{ frmn_hmr_cfg_dir }}"
      recurse: true
      mode: u+rw,g-wx,o-rwx

  - name: "Create cli_config.cfg"
    template:
      src: cli_config.cfg.j2
      dest: "{{ frmn_hmr_cfg_file }}"

  # - name: "Test Hammer CLI Output - NEW/SANDBOX"
  #   shell: |
  #     hammer -c "{{ frmn_hmr_cfg_file }}" organization list
  #     hammer -c "{{ frmn_hmr_cfg_file }}" location     list
  #     hammer -c "{{ frmn_hmr_cfg_file }}" scap-content list
  #     hammer -c "{{ frmn_hmr_cfg_file }}" policy       list
  #     hammer -c "{{ frmn_hmr_cfg_file }}" policy       info --id 
  #   register: hammer_out
  #   failed_when: false
  #   changed_when: false
  # - name: "Hammer output"
  #   debug:
  #     var: hammer_out

  # ---------------------------------------------------------------------------

  - name: "Create or update domain"
    theforeman.foreman.domain:
      name: "{{ dns_name }}"
      organizations:
        - "{{ frmn_org }}"
      locations:
        - "{{ frmn_loc }}"
      username: "{{ frmn_usr }}"
      server_url: "{{ frmn_url }}"
      password: "{{ frmn_pwd }}"
      validate_certs: "{{ frmn_validate_cert }}"
      state: present

  # ---------------------------------------------------------------------------
  - name: "Create or update lifecycle env"
    theforeman.foreman.lifecycle_environment:
      name: "{{ frmn_lce }}"
      label: "{{ frmn_lce | lower }}"
      organization: "{{ frmn_org }}"
      description: "Created via Ansible playbook"
      username: "{{ frmn_usr }}"
      password: "{{ frmn_pwd }}"
      server_url: "{{ frmn_url }}"
      validate_certs: "{{ frmn_validate_cert }}"
      state: present

  # ---------------------------------------------------------------------------
  #  Misc. settings
  - name: "Change Settings"
    shell: |
      hammer -c "{{ frmn_hmr_cfg_file }}" settings set --name instance_title --value "{{ env_label }}"
      hammer -c "{{ frmn_hmr_cfg_file }}" settings set --name instance_color --value "{{ env_colorbar }}"
      hammer -c "{{ frmn_hmr_cfg_file }}" settings set --name remote_execution_ssh_user --value "ansible"
      hammer -c "{{ frmn_hmr_cfg_file }}" settings set --name ansible_ssh_private_key_file --value "/usr/share/foreman-proxy/.ssh/id_rsa_foreman_proxy"
    # failed_when: false

  # ---------------------------------------------------------------------------
  #  Product and Repository object configuration

  # == Foreman repo related objects

  - name: "Create or update Foreman Product"
    theforeman.foreman.product:
      name: "Foreman Product"
      organization: "{{ frmn_org }}"
      username: "{{ frmn_usr }}"
      password: "{{ frmn_pwd }}"
      server_url: "{{ frmn_url }}"
      validate_certs: "{{ frmn_validate_cert }}"
      state: present

  - name: "Create or update Foreman repositories"
    theforeman.foreman.repository:
      name: "Foreman EL9 - {{ item }} Repo"
      content_type: "yum"
      product: "Foreman Product"
      organization: "{{ frmn_org }}"
      url: "http://yum.theforeman.org/{{ item }}/el9/x86_64/"
      # mirror_on_sync: true
      mirroring_policy: mirror_content_only
      download_policy: on_demand
      os_versions: []
      arch: "x86_64"
      username: "{{ frmn_usr }}"
      password: "{{ frmn_pwd }}"
      server_url: "{{ frmn_url }}"
      validate_certs: "{{ frmn_validate_cert }}"
      state: present
    with_items:
      - client/latest
      - releases/latest
      - katello/4.13/katello

  - name: "Sync repository"
    theforeman.foreman.repository_sync:
      repository: "Foreman EL9 - {{ item }} Repo"
      product: "Foreman Product"
      organization: "{{ frmn_org }}"
      username: "{{ frmn_usr }}"
      password: "{{ frmn_pwd }}"
      validate_certs: "{{ frmn_validate_cert }}"
      server_url: "{{ frmn_url }}"
    with_items:
      - client/latest
      - releases/latest
      - katello/4.13/katello
    # when: ( run_sync | default( false ) )

  # == Rocky repo related objects ##

  - name: "Create or update Rocky 9 Product"
    theforeman.foreman.product:
      name: "Rocky9 Product"
      organization: "{{ frmn_org }}"
      username: "{{ frmn_usr }}"
      password: "{{ frmn_pwd }}"
      server_url: "{{ frmn_url }}"
      validate_certs: "{{ frmn_validate_cert }}"
      state: present

  - name: "Create or update Rocky repositories"
    theforeman.foreman.repository:
      name: "Rocky 9 - {{ item }} Repo"
      content_type: "yum"
      product: "Rocky9 Product"
      organization: "{{ frmn_org }}"
      url: "http://dl.rockylinux.org/pub/rocky/9/{{ item }}/x86_64/os/"
      # mirror_on_sync: true
      mirroring_policy: mirror_content_only
      download_policy: on_demand
      os_versions: []
      arch: "x86_64"
      username: "{{ frmn_usr }}"
      password: "{{ frmn_pwd }}"
      server_url: "{{ frmn_url }}"
      validate_certs: "{{ frmn_validate_cert }}"
      state: present
    with_items:
      - AppStream
      - BaseOS
      - extras

  - name: "Sync repositories"
    theforeman.foreman.repository_sync:
      repository: "Rocky 9 - {{ item }} Repo"
      product: "Rocky9 Product"
      organization: "{{ frmn_org }}"
      username: "{{ frmn_usr }}"
      password: "{{ frmn_pwd }}"
      server_url: "{{ frmn_url }}"
      validate_certs: "{{ frmn_validate_cert }}"
    with_items:
      - AppStream
      - BaseOS
      - extras
    # when: ( run_sync | default( false ) )

  # == EPEL repo related objects

  - name: "Create or update EPEL Product"
    theforeman.foreman.product:
      name: "EPEL Product"
      organization: "{{ frmn_org }}"
      username: "{{ frmn_usr }}"
      password: "{{ frmn_pwd }}"
      server_url: "{{ frmn_url }}"
      validate_certs: "{{ frmn_validate_cert }}"
      state: present

  - name: "Create or update EPEL repository"
    theforeman.foreman.repository:
      name: "EPEL9 Repo"
      content_type: "yum"
      product: "EPEL Product"
      organization: "{{ frmn_org }}"
      url: "https://dl.fedoraproject.org/pub/epel/9/Everything/x86_64/"
      # mirror_on_sync: true
      mirroring_policy: mirror_content_only
      download_policy: on_demand
      os_versions: []
      arch: "x86_64"
      username: "{{ frmn_usr }}"
      password: "{{ frmn_pwd }}"
      server_url: "{{ frmn_url }}"
      validate_certs: "{{ frmn_validate_cert }}"
      state: present

  - name: "Sync repository"
    theforeman.foreman.repository_sync:
      repository: "EPEL9 Repo"
      product: "EPEL Product"
      organization: "{{ frmn_org }}"
      username: "{{ frmn_usr }}"
      password: "{{ frmn_pwd }}"
      validate_certs: "{{ frmn_validate_cert }}"
      server_url: "{{ frmn_url }}"
    # when: ( run_sync | default( false ) )

  # == Sync related objects ##
  - name: "Create or update sync plan"
    theforeman.foreman.sync_plan:
      name: "{{ frmn_gen_name }} Sync Plan"
      organization: "{{ frmn_org }}"
      interval: "daily"
      enabled: true
      sync_date: "2024-06-01 00:00:00 UTC"
      products:
        - 'Rocky9 Product'
        - 'Foreman Product'
        # - 'EPEL Product'
      username: "{{ frmn_usr }}"
      password: "{{ frmn_pwd }}"
      server_url: "{{ frmn_url }}"
      validate_certs: "{{ frmn_validate_cert }}"
      state: present

  # ---------------------------------------------------------------------------

  - name: "Create or update content view"
    theforeman.foreman.content_view:
      name: "APE Content View"
      organization: "{{ frmn_org }}"
      repositories:
        - { name: "Foreman EL9 - client/latest Repo",        product: "Foreman Product" }
        - { name: "Foreman EL9 - releases/latest Repo",      product: "Foreman Product" }
        - { name: "Foreman EL9 - katello/4.13/katello Repo", product: "Foreman Product" }
        - { name: "Rocky 9 - BaseOS Repo",    product: "Rocky9 Product" }
        - { name: "Rocky 9 - AppStream Repo", product: "Rocky9 Product" }
        - { name: "Rocky 9 - extras Repo",    product: "Rocky9 Product" }
        # - { name: "EPEL Repo",    product: "EPEL Product" }
      solve_dependencies: true
      username: "{{ frmn_usr }}"
      password: "{{ frmn_pwd }}"
      server_url: "{{ frmn_url }}"
      validate_certs: "{{ frmn_validate_cert }}"
      state: present

  - name: "Ensure content view v1.0 is published into lab"
    theforeman.foreman.content_view_version:
      content_view: "APE Content View"
      organization: "{{ frmn_org }}"
      version: "1.0"
      lifecycle_environments:
        - "{{ frmn_lce }}"
        - "Library"
      username: "{{ frmn_usr }}"
      password: "{{ frmn_pwd }}"
      server_url: "{{ frmn_url }}"
      validate_certs: "{{ frmn_validate_cert }}"
      state: present

  # ---------------------------------------------------------------------------

  - name: "Create or update client activation key"
    theforeman.foreman.activation_key:
      name: "{{ frmn_act_key }}"
      organization: "{{ frmn_org }}"
      lifecycle_environment: "{{ frmn_lce }}"
      content_view: "APE Content View"
      content_overrides:
        - { label: "Default_Organization_Rocky9_Product_Rocky_9_-_BaseOS_Repo",                    override: enabled }
        - { label: "Default_Organization_Rocky9_Product_Rocky_9_-_AppStream_Repo",                 override: enabled }
        - { label: "Default_Organization_Rocky9_Product_Rocky_9_-_extras_Repo",                    override: enabled }
        - { label: "Default_Organization_Foreman_Product_Foreman_EL9_-_client_latest_Repo",        override: enabled }
        - { label: "Default_Organization_Foreman_Product_Foreman_EL9_-_katello_4_13_katello_Repo", override: enabled }
        - { label: "Default_Organization_Foreman_Product_Foreman_EL9_-_releases_latest_Repo",      override: enabled }
        - { label: "Default_Organization_EPEL_Product_EPEL9_Repo",                                 override: enabled }
      username: "{{ frmn_usr }}"
      password: "{{ frmn_pwd }}"
      server_url: "{{ frmn_url }}"
      validate_certs: "{{ frmn_validate_cert }}"
      state: present

  # ---------------------------------------------------------------------------

  - name: "Create or update APE hostgroup"
    theforeman.foreman.hostgroup:
      name: "{{ frmn_hostgroup_name }}"
      organization: "{{ frmn_org }}"
      locations: "{{ frmn_loc }}"
      domain: "{{ dns_name }}"
      architecture: "x86_64"
      operatingsystem: "Rocky Linux 9.3"
      lifecycle_environment: "{{ frmn_lce }}"
      content_view: "APE Content View"
      openscap_proxy: "{{ frmn_host }}"
      activation_keys: "{{ frmn_act_key }}"
      username: "{{ frmn_usr }}"
      password: "{{ frmn_pwd }}"
      server_url: "{{ frmn_url }}"
      validate_certs: "{{ frmn_validate_cert }}"
      state: present

  # ---------------------------------------------------------------------------

  - name: "Bulk upload OpenSCAP content"
    shell: |
      hammer -c "{{ frmn_hmr_cfg_file }}" scap-content bulk-upload --type 'directory' --directory /usr/share/xml/scap/ssg/content --organization "{{ frmn_org }}" --location "{{ frmn_loc }}"
    register: hammer_out
    failed_when: 
      - ( hammer_out.rc != 0 )
      - ( hammer_out.rc != 65 )

  # ---------------------------------------------------------------------------
  - name: "Query for policy"
    shell: |
      hammer -c "{{ frmn_hmr_cfg_file }}" --output json policy info --name '{{ frmn_gen_name }} Policy' | jq '.Id'
    register: hammer_qry
    failed_when: false
  - name: "Set frmn_policy_exists fact"
    set_fact:
      frmn_policy_exists: "{% if ( hammer_qry.rc != 0 ) or ( hammer_qry.stdout == '' ) %}false{% else %}true{% endif %}"

  - name: "Create policy"
    shell: |
      hammer -c "{{ frmn_hmr_cfg_file }}" policy create --name "{{ frmn_gen_name }} Policy" --description "Created via Ansible playbook" --organization "{{ frmn_org }}" --location "{{ frmn_loc }}" --hostgroups "{{ frmn_hostgroup_name }}" --period weekly --weekday sunday --scap-content "rl9 content" --scap-content-profile-id 37  --deploy-by ansible
    when: ( frmn_policy_exists == false )
    register: hammer_out
    failed_when: 
      - ( hammer_out.rc != 0 )
      - ( hammer_out.rc != 65 )
      - '"Name has already been taken" not in hammer_out.stdout'

  - name: "Update policy"
    shell: |
      hammer -c "{{ frmn_hmr_cfg_file }}" policy update --name "{{ frmn_gen_name }} Policy" --description "Created via Ansible playbook" --organization "{{ frmn_org }}" --location "{{ frmn_loc }}" --hostgroups "{{ frmn_hostgroup_name }}" --period weekly --weekday sunday --scap-content "rl9 content" --scap-content-profile-id 37  --deploy-by ansible
    when: ( frmn_policy_exists == true )
    register: hammer_out
    failed_when: 
      - ( hammer_out.rc != 0 )
      - ( hammer_out.rc != 65 )
      - '"Name has already been taken" not in hammer_out.stdout'

  # ---------------------------------------------------------------------------
